# Workflow de teste simplificado para LiveKit

name: Teste de Build

on:
  workflow_dispatch:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
      
      - name: Configurar Docker
        run: |
          # Configurar Docker para usar buildx
          docker buildx create --use
          
      - name: Iniciar Redis
        uses: supercharge/redis-github-action@1.7.0
        with:
          redis-version: 6
          
      - name: Verificar Redis
        run: redis-cli ping
        
      - name: Iniciar serviços com Docker Compose
        run: |
          # Construir e iniciar os containers
          docker-compose up -d --build
          # Listar containers em execução
          docker ps
          # Esperar o serviço iniciar
          sleep 10
          
      - name: Verificar se a API está respondendo
        run: |
          # Verificar se o endpoint da API está acessível
          curl -sSf --retry 5 --retry-delay 5 --retry-max-time 30 http://localhost:7880/rtc/ || (echo "Falha ao acessar a API" && exit 1)
          
      - name: Executar testes de conexão
        run: |
          # Instalar dependências Node.js para testes
          npm ci
          # Executar teste de conexão
          node test-connection.js || (echo "Teste de conexão falhou" && exit 1)
          
      - name: Parar serviços
        if: always()
        run: |
          # Parar e remover containers
          docker-compose down -v --remove-orphans
          # Limpar recursos não utilizados
          docker system prune -f
          docker volume prune -f
