version: '3.8'

# Variáveis de ambiente
# Copie .env.example para .env e atualize com suas credenciais

services:
  # Servidor LiveKit
  livekit:
    image: livekit/livekit-server:latest
    container_name: livekit
    restart: unless-stopped
    ports:
      - "7880:7880"      # API e WebSocket
      - "7881:7881/udp"  # RTP/RTCP (UDP)
      - "443:443"        # HTTPS (para TURN/TLS)
      - "80:80"          # HTTP (redireciona para HTTPS)
      - "3478:3478/udp"  # STUN
      - "5349:5349"      # TURN over TLS
      - "50000-60000:50000-60000/udp"  # Faixa de portas para WebRTC
    volumes:
      - ./livekit.yaml:/livekit.yaml
      - ./certs:/certs
    environment:
      - LIVEKIT_KEYS=${LIVEKIT_API_KEY}:${LIVEKIT_API_SECRET}
      - LIVEKIT_DEVELOPMENT=false
      - LIVEKIT_REDIS_ADDRESS=redis:6379
      - LIVEKIT_REDIS_PASSWORD=${REDIS_PASSWORD}
      - LIVEKIT_NODE_IP=${PUBLIC_IP}  # IP público da sua VPS
    depends_on:
      - redis
    networks:
      - livekit_network

  # API Service
  api:
    build: 
      context: .
      dockerfile: Dockerfile.api
    container_name: livekit_api
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - LIVEKIT_URL=ws://${PUBLIC_IP}:7880
      - LIVEKIT_WS_URL=wss://${DOMAIN}
      - LIVEKIT_API_KEY=${LIVEKIT_API_KEY}
      - LIVEKIT_API_SECRET=${LIVEKIT_API_SECRET}
      - API_AUTH_TOKEN=${API_AUTH_TOKEN}
    depends_on:
      - livekit
    networks:
      - livekit_network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: livekit_redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - livekit_network

networks:
  livekit_network:
    driver: bridge

volumes:
  redis_data:
